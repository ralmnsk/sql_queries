Tasks are here: https://sql-academy.org/en/trainer?sort=byId
Answers:

task 10:
SELECT * from Trip where time_out >= '1900-01-01T10:00:00.000' AND time_out <='1900-01-01T14:00:00.000';

task 11:
-- SELECT name from Passenger order by LENGTH(name) DESC limit 1;
SELECT MAX(LENGTH(name)) from Passenger;
SELECT name from Passenger WHERE LENGTH(name) = (SELECT MAX(LENGTH(name)) from Passenger);

task 12:
-- SELECT trip, count
SELECT trip, count(passenger)as count FROM Pass_in_trip GROUP by trip;

task 13:
Select town_to from Trip join Pass_in_trip on Trip.id=Pass_in_trip.trip
JOIN Passenger on Pass_in_trip.passenger=Passenger.id where name = 'Bruce Willis';


task 14:
Select town_to from Trip join Pass_in_trip on Trip.id=Pass_in_trip.trip
JOIN Passenger on Pass_in_trip.passenger=Passenger.id where name = 'Bruce Willis';

task 15:
SELECT time_in from Trip join Pass_in_trip on Trip.id=Pass_in_trip.trip
JOIN Passenger on Pass_in_trip.passenger=Passenger.id where name = 'Steve Martin' and town_to ='London';


task 16:
SELECT name, count(trip) as count FROM Passenger
join Pass_in_trip on Pass_in_trip.passenger =Passenger.id
GROUP by name
HAVING count >0
ORDER BY count DESC,name;


task 17:
SELECT member_name , status, SUM(amount*unit_price) as costs from FamilyMembers
JOIN Payments on FamilyMembers.member_id = Payments.family_member
where date BETWEEN '2005-01-01T00:00:00.000Z' AND '2006-01-01T00:00:00.000Z'
GROUP BY family_member ;


task 18:
-- SELECT member_name from FamilyMembers
-- where birthday  = (SELECT birthday from FamilyMembers ORDER BY birthday LIMIT 1);

SELECT member_name from FamilyMembers
where birthday  = (SELECT MIN(birthday) from FamilyMembers);

task 19:
SELECT DISTINCT status from FamilyMembers
JOIN Payments on FamilyMembers.member_id=Payments.family_member
JOIN Goods  on Payments.good = Goods.good_id where good_name = 'potato';

task 20:
SELECT status, member_name,(amount*unit_price) as costs from FamilyMembers
JOIN Payments on FamilyMembers.member_id =Payments.family_member
JOIN Goods on Payments.good = Goods.good_id
JOIN GoodTypes on Goods.type = GoodTypes.good_type_id where good_type_name = 'entertainment';

task 21:
SELECT good_name from Payments
JOIN Goods ON Payments.good=Goods.good_id
GROUP BY good_name
HAVING count(good_name) > 1;

task 22:
SELECT member_name from FamilyMembers where status ='mother';

task 23:
SELECT good_name ,unit_price from Payments
JOIN Goods on good=good_id where unit_price =
(SELECT unit_price FROM FamilyMembers
JOIN Payments on member_id =family_member
JOIN Goods on good = good_id
JOIN GoodTypes on type =good_type_id where good_type_name ='delicacies'
ORDER BY unit_price Desc LIMIT 1);

task 24:
SELECT member_name, SUM(amount*unit_price) as costs from FamilyMembers
JOIN Payments on member_id = family_member
WHERE date BETWEEN '2005-06-01T00:00:00.000Z' AND '2005-06-30T00:00:00.000Z'
GROUP BY member_name ;

task 25:
SELECT good_name, unit_price from Payments
JOIN Goods on Payments.good = Goods.good_id
JOIN GoodTypes on Goods.type=GoodTypes.good_type_id where good_type_name ='delicacies'
ORDER BY unit_price DESC LIMIT 1;

Task 26
Identify groups of products that were not purchased in 2005

SELECT good_type_name from GoodTypes where good_type_name NOT IN
(SELECT good_type_name FROM Payments
JOIN Goods on good =good_id
JOIN GoodTypes on good_type_id = type);


Task 27
Find out how much was spent on each of the product groups in 2005. Print the group name and amount
Fields in the resulting table:
good_type_name
costs
Use the "as costs" construction to display the amount spent on a specific product group. This is necessary for correct verification.

SELECT good_type_name, SUM(amount*unit_price) as costs FROM Payments
JOIN Goods on good =good_id
JOIN GoodTypes on good_type_id = type
where date BETWEEN '2005-01-01T00:00:00.000Z' AND '2006-01-01T00:00:00.000Z'
GROUP BY good_type_name;



Task 28
How many trips were made by airlines from Rostov to Moscow ?
Fields in the resulting table:
count
Use the "as count" construction for the aggregate function for counting the number of trips. This is necessary for correct verification.

SELECT COUNT(*) as count FROM Trip WHERE town_from ='Rostov' AND town_to = 'Moscow';



Task 29
Print the names of passengers who flew to Moscow on TU-134
Fields in the resulting table:
name

SELECT DISTINCT name  from Trip
JOIN Pass_in_trip on Trip.id= Pass_in_trip.trip
JOIN Passenger on Pass_in_trip.passenger = Passenger.id
WHERE town_to = 'Moscow' AND plane = 'TU-134';



Task 30
6
Output the load (number of passengers) of each trip . Output the result in sorted form in descending order of load.
Fields in the resulting table:
trip
count

SELECT trip, COUNT(*) AS count FROM Pass_in_trip
GROUP BY Pass_in_trip.trip
ORDER BY count DESC;



Task 31
4
Print all family members with the last name Quincey.
Fields in the resulting table:
*

SELECT * FROM FamilyMembers WHERE member_name LIKE '%Quincey';



Task 32
4
Display the average age of people (in years) stored in the database. The result is rounded to the nearest whole in the smaller side.


WITH view as (SELECT DISTINCT member_name , birthday  FROM FamilyMembers)
SELECT FLOOR(AVG(TIMESTAMPDIFF(YEAR,birthday,NOW()))) as age from view



Task 58
7
Add a 5-star comment on housing located at 11218 Friel Place, New York on behalf of George Clooney
As the primary key (id), specify the number of entries in the table + 1.
The reservation of the room for which you need to leave a review has already been made, you just need to find it.

INSERT INTO Reviews (id,reservation_id,rating ) VALUES ((SELECT MAX(id) from Reviews as R)+1,
(SELECT DISTINCT id from Reservations
where room_id =
    (SELECT id from Rooms WHERE address = '11218, Friel Place, New York')
AND   user_id =
    (SELECT id from Users WHERE name = 'George Clooney'))
,5);